<UserControl x:Class="TCC.View.ElementsGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:TCC.View"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
             DataContext="{Binding ElementsGrid, Source={StaticResource Locator}}" 
            >
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- note you only need bring in these extra resource dictionaries when using non-default styles, so only bring them into your controls where the default style is not what you want -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MaterialDesignDataGrid}">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Style>
       
           
        </ResourceDictionary>
    </UserControl.Resources>
           <DataGrid ScrollViewer.CanContentScroll="True" MaxHeight="1000" ItemsSource="{Binding Elements}" VerticalScrollBarVisibility="Auto" IsReadOnly="True" SelectionMode="Extended" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="dataGrid1" AutoGenerateColumns="False"  materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8">
  
                <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding ID}" ></DataGridTextColumn>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}"></DataGridTextColumn>
                <DataGridTextColumn Header="Position X" Binding="{Binding Position_X}"></DataGridTextColumn>
                <DataGridTextColumn Header="Position Y" Binding="{Binding Position_Y}"></DataGridTextColumn>
                <DataGridTextColumn Header="Width" Binding="{Binding Width}"></DataGridTextColumn>
                <DataGridTextColumn Header="Height" Binding="{Binding Height}"></DataGridTextColumn>

            <DataGridCheckBoxColumn Header="Show Border" Binding="{Binding ShowBorder}" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"></DataGridCheckBoxColumn>
            <DataGridCheckBoxColumn Header="On Top" Binding="{Binding OnTop}" IsReadOnly="True"  ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"></DataGridCheckBoxColumn>
            </DataGrid.Columns>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="SelectionChanged">
                <mvvm:EventToCommand Command="{Binding SendSelectedElementsCommand}" CommandParameter="{Binding ElementName=dataGrid1, Path=SelectedItems}"></mvvm:EventToCommand>
            </i:EventTrigger>
        </i:Interaction.Triggers>
    </DataGrid>
 
</UserControl>
